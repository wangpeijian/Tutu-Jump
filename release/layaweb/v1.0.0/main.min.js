var CLASS$=Laya.class;
var STATICATTR$=Laya.static;
var View=laya.ui.View;
var Dialog=laya.ui.Dialog;
var RankingUI=(function(_super){
		function RankingUI(){
			
		    this.ani1=null;
		    this.maxscore=null;
		    this.myScore=null;
		    this.scoreList=null;
		    this.again=null;
		    this.share=null;
		    this.arrow=null;

			RankingUI.__super.call(this);
		}

		CLASS$(RankingUI,'ui.RankingUI',_super);
		var __proto__=RankingUI.prototype;
		__proto__.createChildren=function(){
		    
			laya.ui.Component.prototype.createChildren.call(this);
			this.createView(RankingUI.uiView);
		}

		STATICATTR$(RankingUI,
		['uiView',function(){return this.uiView={"type":"View","props":{"width":400,"visible":true,"height":600},"child":[{"type":"Image","props":{"y":0,"x":0,"skin":"background/ranking.png"}},{"type":"Label","props":{"y":296,"x":244,"width":101,"var":"maxscore","text":"2470M","height":20,"fontSize":22,"font":"BitMicro","color":"#fff8f8","align":"center"}},{"type":"Label","props":{"y":231,"x":94,"width":218,"var":"myScore","text":"10M","height":60,"fontSize":60,"font":"BitMicro","color":"#e8e80b","bold":true,"align":"center"}},{"type":"List","props":{"y":354,"x":65,"width":265,"var":"scoreList","repeatY":2,"repeatX":1,"renderType":"render","height":134},"child":[{"type":"Box","props":{"y":0,"x":51,"width":228,"renderType":"render","name":"rander","height":46},"child":[{"type":"Label","props":{"width":103,"text":"label","name":"m_label","height":23,"fontSize":22,"font":"BitMicro","color":"#5C9AD5"}},{"type":"Image","props":{"y":3,"x":-51,"width":40,"skin":"score/normal.png","name":"m_img","height":40}},{"type":"Label","props":{"y":8,"x":103,"width":113,"text":"label","name":"m_score","height":21,"fontSize":22,"font":"BitMicro","color":"#5C9AD5","align":"right"}},{"type":"Label","props":{"y":28,"x":-2,"width":103,"name":"m_name","height":15,"fontSize":14,"font":"Helvetica","color":"#5C9AD5"}}]},{"type":"VScrollBar","props":{"y":-7,"x":275,"width":10,"name":"scrollBar","height":150}}]},{"type":"Button","props":{"y":551,"x":56,"width":136,"var":"again","stateNum":2,"skin":"button/button_again.png","height":53}},{"type":"Button","props":{"y":551,"x":209,"width":136,"var":"share","stateNum":2,"skin":"button/button_share.png","height":53}},{"type":"Image","props":{"y":17,"x":255,"width":131,"visible":false,"var":"arrow","skin":"score/share_arrow.png","height":139}}],"animations":[{"nodes":[{"target":23,"keyframes":{"y":[{"value":19,"tweenMethod":"linearNone","tween":true,"target":23,"key":"y","index":0},{"value":35,"tweenMethod":"linearNone","tween":true,"target":23,"key":"y","index":5},{"value":23,"tweenMethod":"linearNone","tween":true,"target":23,"key":"y","index":10}],"x":[{"value":251,"tweenMethod":"linearNone","tween":true,"target":23,"key":"x","index":0},{"value":239,"tweenMethod":"linearNone","tween":true,"target":23,"key":"x","index":5},{"value":251,"tweenMethod":"linearNone","tween":true,"target":23,"key":"x","index":10}]}}],"name":"ani1","id":1,"frameRate":24,"action":0}]};}
		]);
		return RankingUI;
	})(View);
(function () {

    function RankingPage() {

        var _proto = RankingPage.prototype;
        var ranking = '';

        _proto.share = function () {
            ranking.arrow.visible = !ranking.arrow.visible;
            // wxshare = new Laya.HttpRequest();
            // wxshare.once(Laya.Event.COMPLETE, this, this.onShareComplete);
            // wxshare.once(Laya.Event.ERROR, this, this.onShareError);

            // wxshare.send('http://act.guoanfamily.com/openweixin/jsapi/getJsapiSignature?local_url=' + location.href, {}, 'post', 'json', ["Content-Type", "application/json;charset=UTF-8"]);
        }

        _proto.connect = function () {
            hr = new Laya.HttpRequest();
            hr.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress);
            hr.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete);
            hr.once(Laya.Event.ERROR, this, this.onHttpRequestError);
            var jsondata = {
                "openid": "1234568",
                "name": "小白",
                "phone": "18401373793",
                "score": "1000"
            }
            hr.send('http://ntest.guoanfamily.com/game/api/over/2/3', JSON.stringify(jsondata), 'post', 'json', ["Content-Type", "application/json;charset=UTF-8"]);

        }

        _proto.init = function (reload) {
            ranking = new RankingUI();
            ranking.zOrder = 2;
            Laya.stage.addChild(ranking);
            ranking.share.on(Laya.Event.CLICK, this, this.share)
            ranking.again.on(Laya.Event.CLICK, this, function(){
                Laya.stage.removeChildren();
                reload();
            })
            
            this.connect();
        }

        _proto.onHttpRequestError = function (e) {
            console.log("error")
            console.log(e);
        }

        _proto.onHttpRequestProgress = function (e) {
            console.log(e)
        }

        _proto.onHttpRequestComplete = function (e) {
            console.log("收到数据：" + JSON.stringify(hr.data))
            ranking.myScore.text = hr.data.data.score.score + 'M';
            ranking.maxscore.text = hr.data.data.score.maxscore + 'M';
            var data = [];
            var m = 1;
            console.log(hr.data.data.top);
            for (var person of hr.data.data.top) {
                console.log(person);
                data.push({
                    m_label: "No. " + m,
                    m_img: "res/head.png",
                    m_name: person.name + "",
                    m_score: person.maxscore + "M"
                });
                m += 1;
            }
            ranking.scoreList.array = data;

        }

        // _proto.onShareComplete = function (response) {
            
        //     ranking.arrow.visible = !ranking.arrow.visible;
        //     console.log(response);
        //     wx.config({
        //         debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
        //         appId: response.appid, // 必填，公众号的唯一标识
        //         timestamp: parseInt(response.timestamp), // 必填，生成签名的时间戳
        //         nonceStr: response.noncestr, // 必填，生成签名的随机串
        //         signature: response.signature, // 必填，签名，见附录1
        //         jsApiList: [
        //             'onMenuShareAppMessage',
        //             'onMenuShareTimeline'
        //         ] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
        //     });
        //     wx.ready(function () {
        //         // 2. 分享接口
        //         // 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口
        //         wx.onMenuShareAppMessage({
        //             title: '端午节有奖竞猜挑战赛', //标题
        //             desc: '快乐端午，你我共享——有“粽”你就来挑战！', //描述
        //             link: 'http://www.guoanfamily.com/duanwu/#/', //连接地址指打开分享时页面地址
        //             imgUrl: 'http://www.guoanfamily.com/duanwu/static/img/share.jpg', //图片
        //             trigger: function (res) {
        //                 // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
        //             },
        //             success: function (res) {},
        //             cancel: function (res) {},
        //             fail: function (res) {}
        //         });
        //         //分享到朋友圈
        //         wx.onMenuShareTimeline({
        //             title: '端午节有奖问答挑战赛',
        //             desc: '端午节有奖问答挑战赛', //描述
        //             link: 'http://www.guoanfamily.com/duanwu/#/',
        //             imgUrl: 'http://www.guoanfamily.com/duanwu/static/img/share.jpg',
        //             trigger: function (res) {
        //                 // 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
        //             },
        //             success: function (res) {},
        //             cancel: function (res) {},
        //             fail: function (res) {}
        //         });
        //         wx.error(function (res) {});
        //     })
        // }

    }

    //导出对象
    Laya.class(RankingPage, "RankingPage", Laya.stage);
})()
/** ------------------------------系统配置----------------------------------------- */
//项目服务器地址
var SERVER_PATH = "http://act.guoanfamily.com/staticWeb/jumptutu/";
var SHARE_TITLE = "TUTU JUMP";
var SHARE_DESC = "中秋国庆，双节同庆";

//全局配置
var SCREEN_WIDTH = 400;
var SCREEN_HEIGHT = 710;

//系统字体文件配置
var FONT_SOURCE = '../laya/font/BitMicro01.fnt';
var FONT_FAMILY = 'BitMicro';

//游戏动画帧
var GAME_FRAME = 1;
//游戏初始速度
var GAME_SPEED_DEFAULT = 2
//游戏速度
var GAME_SPEED = GAME_SPEED_DEFAULT;
//游戏得分系数
var GAME_SCORE_RATIO = 10;

/** ------------------------------游戏模块配置----------------------------------------- */
//背景配置
//速度
//var BACKGROUND_SPEED = GAME_SPEED;
//循环周期
var BACKGROUND_LOOP_TIME = 1;
//图片资源
var BACKGROUND_IMAGES = ['../laya/assets/background/background_01.png', '../laya/assets/background/background_02.png','../laya/assets/background/background_03.png','../laya/assets/background/background_04.png','../laya/assets/background/background_05.png'];

//云朵配置
//速度
//var CLOUD_SPEED = GAME_SPEED;
//云朵资源
var CLOUD_IMAGE = ['../laya/assets/cloud/cloud_01.png', '../laya/assets/cloud/cloud_02.png'];
//云朵尺寸
var CLOUD_WIDTH = 100;
var CLOUD_HEIGHT = 50;
//一屏幕内云朵数量
var CLOUD_NUMBER = 4;

//灯笼配置
var LANTERN_SPEED = GAME_SPEED * 2;
//灯笼资源
var LANTERN_IMAGE = '../laya/assets/lantern/lanmp.png';
var LANTERN_ANI = './lanmpUp.ani';
//灯笼尺寸
var LANTERN_WIDTH = 70;
var LANTERN_HEIGHT = 70;
//灯笼出现的几率
var LANTERN_CHANCE = 1;
//灯笼加速n毫秒
var LANTERN_FLY_TIME = 10 * 1000;
//灯笼加速倍数
var LANTERN_SPEED_RATE = 2;

//萝卜配置
//var RADISH_SPEED = GAME_SPEED;
//萝卜资源
var RADISH_IMAGE = '../laya/assets/radish/radish.png';
//萝卜尺寸
var RADISH_WIDTH = 30;
var RADISH_HEIGHT = 30;
//萝卜出现的几率
var RADISH_CHANCE = 1;

//tutu配置
var TUTU_JUMP_JSON = './res/atlas/rabbit.json';
var TUTU_JUMP_FAT_JSON = './res/atlas/rabbit_fat.json';
var TUTU_JUMP_ANI = './rabbitJump.ani';
var TUTU_JUMP_FAT_ANI = './rabbitFatJump.ani';

// var TUTU_FLY_JSON = '../laya/rabbit/rabbit.png';
// var TUTU_FLY_FAT_JSON = '../laya/assets/rabbit_fat.png';
var TUTU_FLY_ANI = './rabbitFly.ani';
var TUTU_FLY_FAT_ANI = './rabbitFatFly.ani';
//tutu正常动画执行时间
var TUTU_ANIMATION_DURING = 500;

//tutu尺寸
var TUTU_WIDTH = 80;
var TUTU_HEIGHT = 110;
//tutu起跳速度
var TUTU_JUMP_INIT_SPEED = 10;
//tutu飞行速度
var TUTU_FLY_INIT_SPEED = 10;
//tutu重力加速度
var TUTU_FALL_G = -0.25;

//tutu尺寸
var TUTU_FAT_WIDTH = 120;
var TUTU_FAT_HEIGHT = 120;
//tutu起跳速度
var TUTU_FAT_JUMP_INIT_SPEED = 10;
//tutu飞行速度
var TUTU_FAT_FLY_INIT_SPEED = 10;
//tutu重力加速度
var TUTU_FAT_FALL_G = -0.3;
//tutu移动阻力
var TUTU_MOVE_FRICTION = 0.8;

//月亮配置
var MOON = '../laya/assets/moon/moon.png';
var MOON_LOVE = '../laya/assets/moon/love.png';
var MOON_WIDTH = 232;
var MOON_HEIGHT = 178;

/** ------------------------------页面资源配置----------------------------------------- */
//按钮皮肤
var BUTTON_SKIN_START = '../laya/assets/button/button_start.png';
var BUTTON_SKIN_AGAIN = '../laya/assets/button/button_again.png';
var BUTTON_SKIN_NEXT = '../laya/assets/button/button_next.png';
var BUTTON_WIDTH = 140;
var BUTTON_HEIGHT = 50;
var BUTTON_FONT_SIZE = 26;
var BUTTON_FONT_COLOR = '#F9DD69';
var BUTTON_FONT_COLOR_ACTIVE = '#FFFFFF';

//输入框皮肤
var INPUT_SKIN = '../laya/assets/input/frame_01.png';
var INPUT_WIDTH = 190;
var INPUT_HEIGHT = 50;
var INPUT_FONT_SIZE = 22;
var INPUT_FONT_COLOR = '#089FEA';
var INPUT_PROMPT_COLOR = '#089FEA';

//logo配置
var LOGO_FORM = '../laya/assets/logo/logo_01.png';
var LOGO_FORM_WIDTH = 190;
var LOGO_FORM_HEIGHT = 100;

//表单下边距
var FORM_MARGIN_BOTTOM = 20;


//封面页
var COVER_PAGE_BACKGROUND = '../laya/assets/pages/cover_page_background.jpg';

//表单页
var FORM_PAGE_BACKGROUND = '../laya/assets/pages/form_page_background.png';

//说明页
var EXPLAIN_PAGE_BACKGROUND = '../laya/assets/pages/explain_page_background.png';

//游戏页面
//计分板
var GAME_SCORE_PANEL = '../laya/assets/score/scoreboard.png'
var GAME_SCORE_PANEL_WIDTH = 220;
var GAME_SCORE_PANEL_HEIGHT = 30;

var STATUS_NORMAL = '../laya/assets/score/normal.png'
var STATUS_NORMAL_WIDTH = 15;
var STATUS_NORMAL_HEIGHT = 20;
var STATUS_RADISH_EMPTY = '../laya/assets/score/radish_empty.png'
var STATUS_RADISH = '../laya/assets/radish/radish.png'
var STATUS_RADISH_WIDTH = 15;
var STATUS_RADISH_HEIGHT = 20;
var STATUS_FAT_EMPTY = '../laya/assets/score/fat_empty.png'
var STATUS_FAT = '../laya/assets/score/fat.png'
var STATUS_FAT_WIDTH = 15;
var STATUS_FAT_HEIGHT = 20;
//面板状态间距
var STATUS_PADDING = 10;
(function () {

    function helper() {
        var _proto = helper.prototype;


        _proto.createInput = function (prompt, x, y, create) {
            var _this = this;
            Laya.loader.load(INPUT_SKIN, Laya.Handler.create(this, function () {
                // _this.createFontFamily(function () {
                    var obj = new Laya.TextInput();
                    obj.skin = INPUT_SKIN;
                    obj.size(INPUT_WIDTH, INPUT_HEIGHT);

                    //obj.sizeGrid = "0,40,0,40";

                    obj.fontSize = INPUT_FONT_SIZE;
                    obj.bold = true;
                    obj.color = INPUT_FONT_COLOR;
                    obj.align = "center";
                    obj.prompt = prompt;
                    obj.promptColor = INPUT_PROMPT_COLOR;
                    //obj.font = FONT_FAMILY;
                    Laya.stage.addChild(obj);

                    obj.x = x;
                    obj.y = y;

                    create(obj)
                // })

            }));
        }

        _proto.createButton = function (buttonSkin, x, y, click) {
            var BUTTON_SKIN = buttonSkin;

            var _this = this;
            Laya.loader.load(BUTTON_SKIN, Laya.Handler.create(this, function () {
                //_this.createFontFamily(function () {
                    var obj = new Laya.Button(BUTTON_SKIN);
                    //设置Button相关属性
                    obj.width = BUTTON_WIDTH;
                    obj.height = BUTTON_HEIGHT;

                    //obj.label = label;

                    obj.stateNum = 2;
                    //obj.labelSize = BUTTON_FONT_SIZE;
                    //obj.labelColors = [BUTTON_FONT_COLOR, BUTTON_FONT_COLOR_ACTIVE].join(",");
                    //obj.labelFont = FONT_FAMILY;
                    Laya.stage.addChild(obj);
                    obj.x = x;
                    obj.y = y;

                    obj.on(laya.events.Event.CLICK, window, function () {
                        click(obj);
                    });
                //})
            }));
        }

        _proto.createFontFamily = function (cb) {
            //注册页面中使用的字体
            // var mBitmapFont = new laya.display.BitmapFont();
            // mBitmapFont.loadFont(FONT_SOURCE, new laya.utils.Handler(this, function () {
            //     mBitmapFont.setSpaceWidth(10);
            //     laya.display.Text.registerBitmapFont(FONT_FAMILY, mBitmapFont);
                cb();
            // }));
        }

        _proto.destroy = function (array) {
            for (var i = 0; i < array.length; i++) {
                Laya.stage.removeChild(array[i])
            }

        }

    }

    window.$helper = new helper();

})(window)


(function () {

    function CoverPage() {

        var _proto = CoverPage.prototype;

        _proto.init = function (nextPage) {
            var img = new Laya.Sprite();
            //加载显示图片，坐标位于
            img.loadImage(COVER_PAGE_BACKGROUND, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
            img.size(SCREEN_WIDTH, SCREEN_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(img);
            
            img.on(laya.events.Event.CLICK, window, function () {
                //$helper.destroy([img]);
                Laya.stage.removeChildren();
                nextPage();
            });
        }
    }

    //导出对象
    Laya.class(CoverPage, "CoverPage", Laya.Sprite);
})()
(function () {

    function FormPage() {

        var _proto = FormPage.prototype;

        _proto.init = function (nextPage) {
            var img = null;
            var logo = null;
            var company = null;
            var name = null;
            var mobile = null;
            

            //生成背景
            img = new Laya.Sprite();
            img.loadImage(FORM_PAGE_BACKGROUND, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
            img.size(SCREEN_WIDTH, SCREEN_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(img);

            //生成logo
            var x, y;
            x = (SCREEN_WIDTH - LOGO_FORM_WIDTH) / 2;
            y = SCREEN_HEIGHT * 0.15;
            logo = new Laya.Sprite();
            logo.loadImage(LOGO_FORM, x, y, LOGO_FORM_WIDTH, LOGO_FORM_HEIGHT);
            logo.size(LOGO_FORM_WIDTH, LOGO_FORM_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(logo);

            //生成表单
            var x, y;
            x = (SCREEN_WIDTH - INPUT_WIDTH) / 2;
            y = SCREEN_HEIGHT * 0.38;
            $helper.createInput("COMPANY", x, y, function (obj) {
                company = obj;
            });
            y += INPUT_HEIGHT + FORM_MARGIN_BOTTOM;
            $helper.createInput("NAME", x, y, function (obj) {
                name = obj;
            });
            y += INPUT_HEIGHT + FORM_MARGIN_BOTTOM;
            $helper.createInput("MOBILE", x, y, function (obj) {
                mobile = obj;
            });
            y += INPUT_HEIGHT + FORM_MARGIN_BOTTOM;

            //生成按钮
            x = (SCREEN_WIDTH - BUTTON_WIDTH) / 2;
            $helper.createButton(BUTTON_SKIN_NEXT, x, y, function (obj) {
                console.log(company.text, name.text, mobile.text);
                //$helper.destroy([img, obj, company, name, mobile]);
                Laya.stage.removeChildren();
                nextPage();
            })

        }
    }

    //导出对象
    Laya.class(FormPage, "FormPage", Laya.Sprite);
})()
(function () {

    function ExplainPage() {

        var _proto = ExplainPage.prototype;

        _proto.init = function (nextPage) {
            var img = new Laya.Sprite();
            //加载显示图片，坐标位于
            img.loadImage(EXPLAIN_PAGE_BACKGROUND, 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
            img.size(SCREEN_WIDTH, SCREEN_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(img);
            
            var x = (SCREEN_WIDTH - BUTTON_WIDTH) / 2;
            var y = SCREEN_HEIGHT * 0.85;
            $helper.createButton(BUTTON_SKIN_NEXT, x, y, function (obj) {
                //$helper.destroy([img, obj]);
                Laya.stage.removeChildren();
                Laya.SoundManager.playMusic("./res/sounds/bgmusic.mp3",0);
                nextPage();
            })
        }
    }

    //导出对象
    Laya.class(ExplainPage, "ExplainPage", Laya.Sprite);
})()
(function () {

    function Tutu() {
        var _proto = Tutu.prototype;

        this._STATUS_JUMP = "jump";
        this._STATUS_FAT_JUMP = "fat_jump";
        this._STATUS_FALL = "fall";
        this._STATUS_FLY = "fly";
        this._STATUS_FAT_FLY = "fat_fly";

        this._isFat = false;

        //处在跳跃状态
        this.jumping = false;
        //处在下落状态
        this.falling = false;
        //处在下落状态
        this.flying = false;

        //当前速度
        this.speed = 0;
        //跳跃距离
        this.distance = 0;


        this.self = new Laya.Animation();
        this.self.interval = TUTU_ANIMATION_DURING;

        _proto.init = function () {
            this._isFat = false;

            //处在跳跃状态
            this.jumping = false;
            //处在下落状态
            this.falling = false;
            //处在下落状态
            this.flying = false;

            //当前速度
            this.speed = 0;
            //跳跃距离
            this.distance = 0;

            //tutu尺寸
            TUTU_WIDTH = 80;
            TUTU_HEIGHT = 110;
            //tutu起跳速度
            TUTU_JUMP_INIT_SPEED = 10;
            //tutu飞行速度
            TUTU_FLY_INIT_SPEED = 10;
            //tutu重力加速度
            TUTU_FALL_G = -0.25;

            //注册普通跳起动画
            this.self.loadAtlas(TUTU_JUMP_JSON, Laya.Handler.create(this, function () {
                Laya.Animation.createFrames(TUTU_JUMP_ANI, this._STATUS_JUMP);
                Laya.Animation.createFrames(TUTU_FLY_ANI, this._STATUS_FLY);
                this.self.play(1, false, this._STATUS_JUMP);
            }));

            Laya.stage.addChild(this.self);

            //初始化tutu位置
            this.self.x = (SCREEN_WIDTH - TUTU_WIDTH) / 2;
            this.self.y = (SCREEN_HEIGHT - TUTU_HEIGHT) - SCREEN_HEIGHT * 0.2;

            //监控手机左右晃动
            Laya.Accelerator.instance.on(Laya.Event.CHANGE, window, this._transverseMove.bind(this));

        }

        _proto.dead = function(){
            Laya.SoundManager.playSound("./res/sounds/death.mp3", 1);
        }

        _proto.jump = function () {
            var sound = this._isFat ? "./res/sounds/jumpslow.mp3" : "./res/sounds/jump.mp3"
            Laya.SoundManager.playSound(sound, 1);

            this.changeStatus(this._STATUS_JUMP);
        }

        _proto.fall = function () {
            this.changeStatus(this._STATUS_FALL);
        }

        _proto.fly = function (lanternX, lanternY) {
            //tutu与灯笼居中对齐
            this.self.x = lanternX - (TUTU_WIDTH - LANTERN_WIDTH);
            this.self.y = lanternY + LANTERN_HEIGHT + 20;

            this.changeStatus(this._STATUS_FLY);
        }

        _proto.fat = function () {

            //tutu尺寸
            TUTU_WIDTH = TUTU_FAT_WIDTH;
            TUTU_HEIGHT = TUTU_FAT_HEIGHT;
            //tutu起跳速度
            TUTU_JUMP_INIT_SPEED = TUTU_FAT_JUMP_INIT_SPEED;
            //tutu飞行速度
            TUTU_FLY_INIT_SPEED = TUTU_FAT_FLY_INIT_SPEED;
            //tutu重力加速度
            TUTU_FALL_G = TUTU_FAT_FALL_G;

            this._isFat = true;

            var _this = this;
            this.self.loadAtlas(TUTU_JUMP_FAT_JSON, Laya.Handler.create(this, function () {
                Laya.Animation.createFrames(TUTU_FAT_JUMP_ANI, this._STATUS_FAT_JUMP);
                Laya.Animation.createFrames(TUTU_FAT_FLY_ANI, this._STATUS_FAT_FLY);

                this.self.play(1, false, this._STATUS_FAT_JUMP);
                
                //如果在跳起过程中变胖了,调整兔子位置
                if(_this.flying){
                    this.self.x - 20;
                }
            })); 
        }

        _proto.changeStatus = function (status) {
            this.jumping = false;
            this.falling = false;
            this.flying = false;

            this.self.interval = TUTU_ANIMATION_DURING;

            switch (status) {
                case this._STATUS_JUMP:
                    this.jumping = true;
                    this.speed = TUTU_JUMP_INIT_SPEED;

                    this.self.play(0, false, this._isFat ? this._STATUS_JUMP : this._STATUS_FAT_JUMP);
                    break;

                case this._STATUS_FALL:
                    this.falling = true;
                    break;

                case this._STATUS_FLY:
                    this.self.interval = LANTERN_FLY_TIME;
                    this.flying = true;
                    this.self.play(0, false, this._isFat ? this._STATUS_FLY : this._STATUS_FAT_FLY);
                    break;
            }
        }

        _proto._move = function () {
            //跳起和下落有重力
            if (this.jumping || this.falling) {
                this.speed = this.speed + TUTU_FALL_G;
                this.self.y += -this.speed;
            }else if(this.flying){
                //跟随灯笼飞行
                this.speed = LANTERN_SPEED;
            }

            if (this.speed <= 0) {
                this.fall();
            }     

            //累加位移 统计移动距离
            if (this.distance + this.speed > this.distance) {
                this.distance += this.speed;
            }
        }

        //控制tutu横向移动
        _proto._transverseMove = function (acceleration, accelerationIncludingGravity, rotationRate, interval) {
            this.self.x += this._isFat ? accelerationIncludingGravity.x * TUTU_MOVE_FRICTION : accelerationIncludingGravity.x;

            if (this.self.x 　< 0) {
                this.self.x = 0;
            } else if (this.self.x 　> SCREEN_WIDTH - TUTU_WIDTH) {
                this.self.x 　= SCREEN_WIDTH - TUTU_WIDTH;
            }
        }

        this.init();
    }

    //导出人物对象
    Laya.class(Tutu, "Tutu", Laya.Sprite);
})()
(function () {

    function Radish() {
        var _proto = Radish.prototype;

        this.self = null;

        _proto.init = function () {
            this.self = new Laya.Sprite();
            //加载显示图片，坐标位于
            this.self.loadImage(RADISH_IMAGE, 0, 0, RADISH_WIDTH, RADISH_HEIGHT);
            //默认出现一次
            this.setPosition();

            //添加到舞台
            Laya.stage.addChild(this.self);

            //this.loop();
        }

        _proto._move = function () {
            //云彩只能向下移动
            this.self.y += GAME_SPEED;
            
            //每一个整屏高度的倍数计算一次
            if (this.self.y > SCREEN_HEIGHT  && this.self.y % SCREEN_HEIGHT < SCREEN_HEIGHT * RADISH_CHANCE) {
                //下一次是否出现根据 -> 随机数是否在几率之中
                if (Math.random() < RADISH_CHANCE) {
                    this.setPosition();
                }
            }
        }

        _proto.setPosition = function () {
            this.self.x = Math.random() * (SCREEN_WIDTH - RADISH_WIDTH);
            this.self.y = (Math.random() + 1) * (- SCREEN_HEIGHT / RADISH_CHANCE);
        }

        //判断物体是否碰撞
        _proto.IsCollision = function(x, y, cb){
            if(this.self.y > 0){
                // 判断横坐标在不在范围内
                if(this.self.x + RADISH_WIDTH >= x && this.self.x <= x + TUTU_WIDTH){
                    if(this.self.y + RADISH_HEIGHT >= y && this.self.y <= y + TUTU_HEIGHT){
                        this.setPosition();
                        cb(this.self.x, this.self.y);
                    }
                }
            }
        }

        this.init();
    }

    //导出对象
    Laya.class(Radish, "Radish", Laya.Sprite);
})()
(function () {


    function Background() {
        var _proto = Background.prototype;

        this.first = null;
        this.second = null;
        this.speed = GAME_SPEED;
        this.backgroundIndex = 0;

        _proto.init = function (){
            this.backgroundIndex = 0;
            
            this.first = new Laya.Sprite();
            //加载显示图片，坐标位于
            this.first.loadImage(BACKGROUND_IMAGES[this.backgroundIndex++], 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(this.first);

            this.second = new Laya.Sprite();
            //加载显示图片，坐标位于
            this.second.loadImage(BACKGROUND_IMAGES[this.backgroundIndex++], 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);
            this.second.y = -SCREEN_HEIGHT;
            //添加到舞台
            Laya.stage.addChild(this.second);

            //this.loop();
        }

        // _proto.loop = function (){
        //    Laya.timer.frameLoop(GAME_FRAME, this, this._move);
        // }

        _proto._move = function(){
            //移动到最后一个背景则不再滚动
            if(this.backgroundIndex > BACKGROUND_IMAGES.length){
                return;
            }

            this.first.y += this.speed
            this.second.y += this.speed

            if(this.first.y >= SCREEN_HEIGHT){
                this.first.y = -SCREEN_HEIGHT;

                let index = this.backgroundIndex;
                if(index > BACKGROUND_IMAGES.length - 1){
                    index = BACKGROUND_IMAGES.length - 1;
                    this.backgroundIndex++
                }else{
                    index = this.backgroundIndex++
                }

                this.first.loadImage(BACKGROUND_IMAGES[index], 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)
            }

            if(this.second.y >= SCREEN_HEIGHT){
                this.second.y = -SCREEN_HEIGHT;

                let index = this.backgroundIndex;
                if(index > BACKGROUND_IMAGES.length - 1){
                    index = BACKGROUND_IMAGES.length - 1;
                    this.backgroundIndex++
                }else{
                    index = this.backgroundIndex++
                }

                this.second.loadImage(BACKGROUND_IMAGES[index], 0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)
            }
        }

        this.init();
    }


    //导出对象
    Laya.class(Background, "Background", Laya.Sprite);
})()
(function(){

    /**
     * 
     * @param {*} x 定义云朵出现在屏幕的位置 
     */
    function Cloud(x, y){
        var _proto = Cloud.prototype;

        this.self = null;

         _proto.init = function (){
            this.self = new Laya.Sprite();
            //加载显示图片，坐标位于
            let cloudStyle = Math.random() > 0.5 ? 1 : 0;
            this.self.loadImage(CLOUD_IMAGE[cloudStyle], 0, 0, CLOUD_WIDTH, CLOUD_HEIGHT);
            //默认隐藏云朵位置
            //this.self.y = -CLOUD_HEIGHT;
            this.self.x = x;
            this.self.y = y;
            //添加到舞台
            Laya.stage.addChild(this.self);

            //this.loop();
        }

        //  _proto.loop = function (){
        //    Laya.timer.frameLoop(GAME_FRAME, this, this._move);
        // }
        
        _proto._move = function(){
            //云彩只能向下移动
            this.self.y += GAME_SPEED;

            if(this.self.y >= SCREEN_HEIGHT){
                this.self.y = -(SCREEN_HEIGHT - CLOUD_HEIGHT * (CLOUD_NUMBER - 1)) / (CLOUD_NUMBER - 1) - CLOUD_HEIGHT;
                this.self.x = Math.random() * (SCREEN_WIDTH - CLOUD_WIDTH);
            }
        }

        //判断物体是否碰撞
        _proto.IsCollision = function(x, y, cb){
            if(this.self.y > 0){
                // 判断横坐标在不在范围内
                if(this.self.x <= x && this.self.x + CLOUD_WIDTH >= x){
                    if(this.self.y <= y && this.self.y + CLOUD_HEIGHT >= y){
                        cb(this.self.x, this.self.y);
                    }
                }
            }
        }

        this.init();
    }

    //导出对象
    Laya.class(Cloud, "Cloud", Laya.Sprite);
})()
(function () {

    function Lantern() {
        var _proto = Lantern.prototype;

        this.self = null;
        this._carrying = false;
        this._used = false;

        _proto.init = function () {
            this._used = false;
            this._carrying = false;

            this.self = new Laya.Sprite();
            //加载显示图片，坐标位于
            this.self.loadImage(LANTERN_IMAGE, 0, 0, LANTERN_WIDTH, LANTERN_HEIGHT);
            //默认出现一次
            this.setPosition();

            //添加到舞台
            Laya.stage.addChild(this.self);

             //监控手机左右晃动
            Laya.Accelerator.instance.on(Laya.Event.CHANGE, window, this._transverseMove.bind(this));
        }


        _proto._move = function () {
            if(this._carrying){
               return;
            }

            //灯笼向上移动
            this.self.y -= LANTERN_SPEED;


            //每一个整屏高度的倍数计算一次    
            if (-this.self.y > SCREEN_HEIGHT && - this.self.y % SCREEN_HEIGHT < SCREEN_HEIGHT * LANTERN_CHANCE) {
                //下一次是否出现根据 -> 随机数是否在几率之中
                if (Math.random() < LANTERN_CHANCE) {
                    this.setPosition();
                }
            }
        }

        _proto.setPosition = function () {
            this.self.x = Math.random() * (SCREEN_WIDTH - LANTERN_WIDTH);
            this.self.y = (Math.random() + 1) * (SCREEN_HEIGHT / LANTERN_CHANCE);
            this._used = false;
        }

        //判断物体是否碰撞
        _proto.IsCollision = function(x, y, cb){
            if(this._used){
                return;
            }

            if(this.self.y > 0){
                // 判断横坐标在不在范围内
                if(this.self.x + LANTERN_WIDTH >= x && this.self.x <= x + TUTU_WIDTH){
                    if(this.self.y + LANTERN_HEIGHT >= y && this.self.y <= y + TUTU_HEIGHT){
                        this._carrying = true;
                        this._used = true;

                        //抓住兔子后开始加速倒计时
                        var _this = this;
                        var countDown = new Laya.Sprite();
                        //注册页面中使用的字体
                       // $helper.createFontFamily(function () {
                            var countDown = new laya.display.Text();
                            countDown.x = 20;
                            countDown.y = 10;
                            countDown.fontSize = 40;
                            countDown.text = LANTERN_FLY_TIME / 1000;
                            countDown.color = BUTTON_FONT_COLOR;
                            countDown.align = "center";
                            countDown.bold = true;

                            var timer = setInterval(function(){
                                countDown.text = countDown.text - 1;

                                if(countDown.text == 0){
                                    _this.self.removeChild(countDown);
                                    window.clearInterval(timer)
                                }
                            }, 1000);

                             _this.self.addChild(countDown);
                        //});

                        cb(this.self.x, this.self.y);
                    }
                }
            }
        }

        //丢弃兔子
        _proto.castOff = function(){
            this._carrying = false;
        }

        //控制灯笼横向移动
        _proto._transverseMove = function (acceleration, accelerationIncludingGravity, rotationRate, interval) {
            //携带兔子时灯笼也可以横向移动
            if(!this._carrying){
                return;
            }

            this.self.x += accelerationIncludingGravity.x;

            if (this.self.x 　< 0) {
                this.self.x = 0;
            } else if (this.self.x 　> SCREEN_WIDTH - LANTERN_WIDTH) {
                this.self.x 　= SCREEN_WIDTH - LANTERN_WIDTH;
            }
        }

        this.init();
    }

    //导出对象
    Laya.class(Lantern, "Lantern", Laya.Sprite);
})()
(function () {

    function Moon() {
        var _proto = Moon.prototype;

        this.self = null;
        this.loveing = false;

        _proto.init = function () {
            this.self = new Laya.Sprite();
            //加载显示图片，坐标位于
            this.self.loadImage(MOON, SCREEN_WIDTH - MOON_WIDTH, 0, MOON_WIDTH, MOON_HEIGHT);
            //添加到舞台
            Laya.stage.addChild(this.self);
        }

        _proto._move = function () {
           
        }

        this.init();
    }

    //导出对象
    Laya.class(Moon, "Moon", Laya.Sprite);
})()
(function () {

    function ScorePanel() {
        var _proto = ScorePanel.prototype;

        this.self = null;
        this.scoreText = null;
        this.radishList = [];
        this.fat = null;

        this.level = 0;
        this.score = 0;

        _proto.init = function () {
            var _this = this;

            //初始化数据
            this.fat = null;
            this.level = 0;
            this.score = 0;
            this.radishList = [];

            //初始化积分面板
            var scorePanel = new Laya.Sprite();
            scorePanel.loadImage(GAME_SCORE_PANEL, 0, 10, GAME_SCORE_PANEL_WIDTH, GAME_SCORE_PANEL_HEIGHT);
            scorePanel.size(GAME_SCORE_PANEL_WIDTH, GAME_SCORE_PANEL_HEIGHT);
            scorePanel.zOrder = 1;
            this.self = scorePanel;

            //注册页面中使用的字体
            $helper.createFontFamily(function () {
                //初始化得分
                var scoreText = new laya.display.Text();
                scoreText.x = 40;
                scoreText.y = 8;
                scoreText.text = _this.score + "M";
                scoreText.color = BUTTON_FONT_COLOR;
                scoreText.align = "center";
                scoreText.fontSize = 35;
                _this.scoreText = scoreText;
                scorePanel.addChild(scoreText);
            });

            //初始化兔子状态条
            var x = 40, y = 50;
            var l_normal = new Laya.Sprite();
            l_normal.loadImage(STATUS_NORMAL, x, y, STATUS_NORMAL_WIDTH, STATUS_NORMAL_HEIGHT);
            scorePanel.addChild(l_normal);
            for (var i = 0; i < 3; i++) {
                var l_radish = new Laya.Sprite();
                if (i === 0) {
                    x += STATUS_NORMAL_WIDTH + STATUS_PADDING;
                } else {
                    x += STATUS_RADISH_WIDTH + STATUS_PADDING;
                }

                var status = new Laya.Sprite();
                l_normal.loadImage(STATUS_RADISH_EMPTY, x, y, STATUS_RADISH_WIDTH, STATUS_RADISH_HEIGHT);
                scorePanel.addChild(l_radish);
                this.radishList.push(l_radish);
            }

            x += STATUS_RADISH_WIDTH + STATUS_PADDING;
            y = 50;
            var l_fat = new Laya.Sprite();
            l_fat.loadImage(STATUS_FAT_EMPTY, x, y, STATUS_FAT_WIDTH, STATUS_FAT_HEIGHT);
            this.fat = l_fat;
            scorePanel.addChild(l_fat);


            Laya.stage.addChild(scorePanel);
        }

        _proto.upgrade = function(){
            ++this.level;

            var x = 40, y = 50;
            for (var i = 0; i < 3; i++) {
                if(this.level - i <= 0){
                    return;
                }

                if (i === 0) {
                    x += STATUS_NORMAL_WIDTH + STATUS_PADDING;
                } else {
                    x += STATUS_RADISH_WIDTH + STATUS_PADDING;
                }

                var radish = this.radishList[i];
                radish.loadImage(STATUS_RADISH, x, y, STATUS_RADISH_WIDTH, STATUS_RADISH_HEIGHT);

                if(i === 2){
                    x += STATUS_RADISH_WIDTH + STATUS_PADDING;
                    y = 50;
                    this.fat.loadImage(STATUS_FAT, x, y, STATUS_FAT_WIDTH, STATUS_FAT_HEIGHT);
                }
            }

            return this.level === 3;
        }

        _proto._move = function () {
            this.scoreText.text = this.score + "M";
        }

        this.init();
    }

    //导出对象
    Laya.class(ScorePanel, "ScorePanel", Laya.Sprite);
})()
(function () {

    function Engine() {
        var _proto = Engine.prototype;

        this.cloudList = [];
        this.background = null;
        this.lantern = null;
        this.tutu = null;
        this.scorePanel = null;
        this.startButton = null;
        this.moon = null;

        this.gameOver = false;
        this.gameOverCallback = null;
        this.executed = false;

        _proto.start = function () {
            this.tutu.jump();
            Laya.timer.frameLoop(GAME_FRAME, this, this._move);  
        }

        //初始化游戏场景
        _proto.init = function (cb) {
            if(cb){
                this.gameOverCallback = cb;
            }

            this.cloudList = [];
            this.background = null;
            this.lantern = null;
            this.tutu = null;
            this.scorePanel = null;
            this.startButton = null;
            this.moon = null;
            this.gameOver = false;
            this.executed = false;

            var _this = this;

            // -----------------积分部分-----------------
            this.scorePanel = new ScorePanel();
            // ----------------------------------

            //初始化背景
            this.background = new Background();

            //-----------------创建月亮和母兔子-----------------
            this.moon = new Moon();
            //----------------------------------

            //创建随机云彩
            for (var i = 0; i < CLOUD_NUMBER; i++) {
                var coordinateX = Math.random() * (SCREEN_WIDTH - CLOUD_WIDTH);

                //游戏开始时少展示两个云彩
                var coordinateY = ((SCREEN_HEIGHT - CLOUD_HEIGHT * (CLOUD_NUMBER - 1)) / (CLOUD_NUMBER - 1) + CLOUD_HEIGHT) * (i - 2);

                var cloud = new Cloud(coordinateX, coordinateY);
                this.cloudList.push(cloud);
            }

            //创建随机灯笼
            this.lantern = new Lantern();
            //创建随机萝卜
            this.radish = new Radish();
            //创建tutu
            this.tutu = new Tutu();

            //创建开始按钮
            var x = (SCREEN_WIDTH - BUTTON_WIDTH) / 2;
            var y = SCREEN_HEIGHT * 0.85; //this.tutu.self.y + TUTU_HEIGHT + FORM_MARGIN_BOTTOM * 6;
            $helper.createButton(BUTTON_SKIN_START, x, y, function (obj) {
                _this.startButton = obj;
                _this.start();
                $helper.destroy([_this.startButton]);
            })
        }

        //开始动画
        _proto._move = function () {
            if (this.gameOver) {
                if(!this.executed){
                    this.executed = true;
                    this.gameOverCallback();
                }else{
                    Laya.timer.clear(this, this._move);
                }
                return;
            }

            //触发所有模块的动画
            this.background._move();
            this.tutu._move();
            this.lantern._move();
            this.radish._move();
            this.scorePanel._move();

            for (var i = 0; i < CLOUD_NUMBER; i++) {
                this.cloudList[i]._move();
            }

            
            var tutu = this.tutu;
            var scorePanel = this.scorePanel;
            var moon = this.moon;
            var lantern = this.lantern;

            //判断游戏是否结束
            if (tutu.self.y > SCREEN_HEIGHT) {
                //游戏结束
                tutu.dead();
                this.gameOver = true;
                return;
            }

            //展示得分
            var score = tutu.distance * GAME_SCORE_RATIO;
            this.scorePanel.score = parseInt(score);

            //开始判断物体间是否发生了碰撞
            //1.吃萝卜碰撞
            this.radish.IsCollision(tutu.self.x, tutu.self.y, function () {
                //如果升过3级则兔子变胖                
                if(scorePanel.upgrade()){
                    tutu.fat();
                }

                //兔子出桃心
                //tutu.love();

                //母兔子出桃心
                //moon.love();
            });

            //2.云彩碰撞
            var x = tutu.self.x + TUTU_WIDTH / 2;
            var y = tutu.self.y + TUTU_HEIGHT * 0.8;
            for (var i = 0; i < CLOUD_NUMBER; i++) {
                var cloud = this.cloudList[i];
                cloud.IsCollision(x, y, function () {
                    if (tutu.falling) {
                        tutu.jump();
                    }
                })
            }

            //3.灯笼碰撞
            lantern.IsCollision(x, y, function(lanternX, lanternY){
                //兔子跟随灯笼飞行
                tutu.fly(lanternX, lanternY);
                //游戏速度加快
                GAME_SPEED = LANTERN_SPEED_RATE * LANTERN_SPEED;

                setTimeout(function(){
                    GAME_SPEED = GAME_SPEED_DEFAULT;
                    lantern.castOff();
                    tutu.jump();
                }, LANTERN_FLY_TIME)
            })

        }

        //创建对象时初始化素材
        //this.init();
    }

    //导出对象
    Laya.class(Engine, "Engine", Laya.Sprite);
})()
(function () {
	var OBJECT_COVER_PAGE = new CoverPage();
	var OBJECT_FORM_PAGE = new FormPage();
	var OBJECT_EXPLAIN_PAGE = new ExplainPage();
	var OBJECT_ENGINE = new Engine();
	var OBJECT_RANK = new RankingPage();

	//初始化窗口
	function initSystem() {
		Laya.Font.defaultFamily = FONT_FAMILY;
		Laya.init(SCREEN_WIDTH, SCREEN_HEIGHT, Laya.WebGL);
		Laya.stage.scaleMode = Laya.Stage.SCALE_SHOWALL;
		Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
		Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
		Laya.stage.scaleMode = Laya.Stage.SCREEN_NONE;
	}

	function systenRun() {
		OBJECT_COVER_PAGE.init(createFormPage);

		//创建表单页面
		function createFormPage() {
			OBJECT_FORM_PAGE.init(createExplainPage);
		}

		//创建表单页面
		function createExplainPage() {
			OBJECT_EXPLAIN_PAGE.init(createEngine);
		}

		//游戏运行引擎
		function createEngine() {
			OBJECT_ENGINE.init(createRank);
		}

		function createRank() {
			OBJECT_RANK.init(OBJECT_ENGINE.init.bind(OBJECT_ENGINE));
		}
	}

	function initWechat() {
		(function () {
			var wxshare = new Laya.HttpRequest();
			wxshare.once(Laya.Event.COMPLETE, this, this.onShareComplete);
			wxshare.once(Laya.Event.ERROR, this, function(){});

			wxshare.send('http://act.guoanfamily.com/openweixin/jsapi/getJsapiSignature?local_url=' + location.href, {}, 'post', 'json', ["Content-Type", "application/json;charset=UTF-8"]);
		})();

		function onShareComplete(response) {
			console.log(response);
			wx.config({
				debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
				appId: response.appid, // 必填，公众号的唯一标识
				timestamp: parseInt(response.timestamp), // 必填，生成签名的时间戳
				nonceStr: response.noncestr, // 必填，生成签名的随机串
				signature: response.signature, // 必填，签名，见附录1
				jsApiList: [
					'onMenuShareAppMessage',
					'onMenuShareTimeline'
				] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
			});
			wx.ready(function () {
				// 2. 分享接口
				// 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口
				wx.onMenuShareAppMessage({
					title: SHARE_TITLE, //标题
					desc: SHARE_DESC, //描述
					link: SERVER_PATH, //连接地址指打开分享时页面地址
					imgUrl:  SERVER_PATH + 'share.jpg', //图片
					trigger: function (res) {
						// 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
					},
					success: function (res) { },
					cancel: function (res) { },
					fail: function (res) { }
				});
				//分享到朋友圈
				wx.onMenuShareTimeline({
					title: SHARE_TITLE,
					desc: SHARE_DESC, //描述
					link: SERVER_PATH,
					imgUrl: SERVER_PATH + 'share.jpg',
					trigger: function (res) {
						// 不要尝试在trigger中使用ajax异步请求修改本次分享的内容，因为客户端分享操作是一个同步操作，这时候使用ajax的回包会还没有返回
					},
					success: function (res) { },
					cancel: function (res) { },
					fail: function (res) { }
				});
				wx.error(function (res) { });
			})
		}
	}

	var asset = [];
	asset.push({
		url: "background/ranking.png",
		type: Laya.Loader.IMAGE
	});
	asset.push({
		url: ["res/atlas/button.json", "res/atlas/score.json"],
		type: Laya.Loader.ATLAS
	})


	initSystem();
	initWechat();
	Laya.loader.load(asset, laya.utils.Handler.create(this, systenRun));





})()
